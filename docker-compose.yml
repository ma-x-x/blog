version: '3.7'

services:
  # proxy:
  #   image: nginx:alpine
  #   container_name: proxy
  #   ports:
  #     - '9000:9000'
  #   volumes:
  #     - ./nginx/default.conf:/etc/nginx/nginx.conf
  #   restart: 'unless-stopped'
  #   networks:
  #     - backend
  nginx:
    build:
      dockerfile: Dockerfile
      context: ./nginx
    container_name: my-blog
    volumes:
      - ./nginx:/etc/nginx/conf.d
    stdin_open: true
    ports:
      - 9000:9000
  admin_frontend:
    build:
      dockerfile: Dockerfile
      context: ./admin-frontend
    container_name: admin_frontend
    volumes:
      - /app/node_modules
      - ./admin-frontend:/app
    stdin_open: true
    ports:
      - 3000:3000
  admin_backend:
    build:
      context: ./admin-backend
      target: production-build-stage
      dockerfile: Dockerfile
    container_name: admin_backend
    ports:
      - '4000:4000'
    volumes:
      - /app/node_modules
      - ./admin-backend:/app
    restart: 'unless-stopped'
    networks:
      - backend
    links:
      - mysql
    depends_on:
      - mysql
  mysql:
    image: mysql:5.7
    container_name: mysql
    environment:
      MYSQL_ROOT_USER: root
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: test
    ports:
      - '3306:3306'
    networks:
      - backend

networks:
  backend:
    driver: bridge

volumes:
  data:
    driver: local
