{"version":3,"sources":["../../src/tests/auth.test.ts"],"sourcesContent":["import bcrypt from 'bcrypt';\nimport { Sequelize } from 'sequelize';\nimport request from 'supertest';\nimport App from '@/app';\nimport { CreateUserDto } from '@dtos/users.dto';\nimport AuthRoute from '@routes/auth.route';\n\nafterAll(async () => {\n  await new Promise<void>(resolve => setTimeout(() => resolve(), 500));\n});\n\ndescribe('Testing Auth', () => {\n  describe('[POST] /signup', () => {\n    it('response should have the Create userData', async () => {\n      const userData: CreateUserDto = {\n        email: 'test@email.com',\n        password: 'q1w2e3r4!',\n      };\n\n      const authRoute = new AuthRoute();\n      const users = authRoute.authController.authService.users;\n\n      users.findOne = jest.fn().mockReturnValue(null);\n      users.create = jest.fn().mockReturnValue({\n        id: 1,\n        email: userData.email,\n        password: await bcrypt.hash(userData.password, 10),\n      });\n\n      (Sequelize as any).authenticate = jest.fn();\n      const app = new App([authRoute]);\n      return request(app.getServer()).post(`${authRoute.path}signup`).send(userData).expect(201);\n    });\n  });\n\n  describe('[POST] /login', () => {\n    it('response should have the Set-Cookie header with the Authorization token', async () => {\n      const userData: CreateUserDto = {\n        email: 'test@email.com',\n        password: 'q1w2e3r4!',\n      };\n\n      const authRoute = new AuthRoute();\n      const users = authRoute.authController.authService.users;\n\n      users.findOne = jest.fn().mockReturnValue({\n        id: 1,\n        email: userData.email,\n        password: await bcrypt.hash(userData.password, 10),\n      });\n\n      (Sequelize as any).authenticate = jest.fn();\n      const app = new App([authRoute]);\n      return request(app.getServer())\n        .post(`${authRoute.path}login`)\n        .send(userData)\n        .expect('Set-Cookie', /^Authorization=.+/);\n    });\n  });\n\n  // describe('[POST] /logout', () => {\n  //   it('logout Set-Cookie Authorization=; Max-age=0', async () => {\n  //     const authRoute = new AuthRoute();\n\n  //     const app = new App([authRoute]);\n  //     return request(app.getServer())\n  //       .post(`${authRoute.path}logout`)\n  //       .expect('Set-Cookie', /^Authorization=\\;/);\n  //   });\n  // });\n});\n"],"names":["afterAll","Promise","resolve","setTimeout","describe","it","userData","email","password","authRoute","AuthRoute","users","authController","authService","findOne","jest","fn","mockReturnValue","create","id","bcrypt","hash","Sequelize","authenticate","app","App","request","getServer","post","path","send","expect"],"mappings":"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"}