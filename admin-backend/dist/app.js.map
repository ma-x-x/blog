{"version":3,"sources":["../src/app.ts"],"sourcesContent":["import compression from 'compression';\nimport cookieParser from 'cookie-parser';\nimport cors from 'cors';\nimport express from 'express';\nimport helmet from 'helmet';\nimport hpp from 'hpp';\nimport morgan from 'morgan';\nimport swaggerJSDoc from 'swagger-jsdoc';\nimport swaggerUi from 'swagger-ui-express';\nimport { NODE_ENV, PORT, LOG_FORMAT, ORIGIN, CREDENTIALS } from '@config';\nimport DB from '@databases';\nimport { Routes } from '@interfaces/routes.interface';\nimport errorMiddleware from '@middlewares/error.middleware';\nimport jwtTokenMiddleware, { jwtUnlessPath } from '@/middlewares/auth.jwtToken';\nimport expressJwt from 'express-jwt';\nimport { SECRET_KEY } from '@config';\nimport { logger, stream } from '@utils/logger';\n\nclass App {\n  public app: express.Application;\n  public env: string;\n  public port: string | number;\n\n  constructor(routes: Routes[]) {\n    this.app = express();\n    this.env = NODE_ENV || 'development';\n    this.port = PORT || 8000;\n\n    this.connectToDatabase();\n    this.initializeMiddlewares();\n    this.initializeRoutes(routes);\n    this.initializeSwagger();\n    this.initializeErrorHandling();\n  }\n\n  public listen() {\n    this.app.listen(this.port, () => {\n      logger.info(`=================================`);\n      logger.info(`======= ENV: ${this.env} =======`);\n      logger.info(`🚀 App listening on the port ${this.port}`);\n      logger.info(`=================================`);\n    });\n  }\n\n  public getServer() {\n    return this.app;\n  }\n\n  private connectToDatabase() {\n    DB.sequelize.sync({ force: false });\n  }\n\n  private initializeMiddlewares() {\n    this.app.use(morgan(LOG_FORMAT, { stream }));\n    this.app.use(cors({ origin: ORIGIN, credentials: CREDENTIALS }));\n    this.app.use(hpp());\n    this.app.use(helmet());\n    this.app.use(compression());\n    this.app.use(express.json());\n    this.app.use(express.urlencoded({ extended: true }));\n    this.app.use(cookieParser());\n    this.app.use(jwtTokenMiddleware());\n    // 指定路径jwtUnlessPath不经过 Token 解析\n    this.app.use(\n      expressJwt({ credentialsRequired: false, secret: SECRET_KEY, algorithms: ['HS256'] }).unless({\n        path: jwtUnlessPath,\n      }),\n    );\n  }\n\n  private initializeRoutes(routes: Routes[]) {\n    routes.forEach(route => {\n      this.app.use('/', route.router);\n    });\n  }\n\n  private initializeSwagger() {\n    const options = {\n      swaggerDefinition: {\n        info: {\n          title: 'REST API',\n          version: '1.0.0',\n          description: 'Example docs',\n        },\n      },\n      apis: ['swagger.yaml'],\n    };\n\n    const specs = swaggerJSDoc(options);\n    this.app.use('/api-docs', swaggerUi.serve, swaggerUi.setup(specs));\n  }\n\n  private initializeErrorHandling() {\n    this.app.use(errorMiddleware);\n  }\n}\n\nexport default App;\n"],"names":["App","listen","app","port","logger","info","env","getServer","connectToDatabase","DB","sequelize","sync","force","initializeMiddlewares","use","morgan","LOG_FORMAT","stream","cors","origin","ORIGIN","credentials","CREDENTIALS","hpp","helmet","compression","express","json","urlencoded","extended","cookieParser","jwtTokenMiddleware","expressJwt","credentialsRequired","secret","SECRET_KEY","algorithms","unless","path","jwtUnlessPath","initializeRoutes","routes","forEach","route","router","initializeSwagger","options","swaggerDefinition","title","version","description","apis","specs","swaggerJSDoc","swaggerUi","serve","setup","initializeErrorHandling","errorMiddleware","constructor","NODE_ENV","PORT"],"mappings":"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"}