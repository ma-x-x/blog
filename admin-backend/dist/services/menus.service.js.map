{"version":3,"sources":["../../src/services/menus.service.ts"],"sourcesContent":["import { hash } from 'bcrypt';\nimport DB from '@databases';\nimport { CreateUserDto } from '@dtos/users.dto';\nimport { HttpException } from '@exceptions/HttpException';\nimport { User } from '@interfaces/users.interface';\nimport { isEmpty } from '@utils/util';\nimport { Menu } from '@/interfaces/menus.interface';\n\nclass UserService {\n  public menus = DB.Menus;\n  public roles = DB.Roles;\n\n  public async findMenusByRoleId(): Promise<Menu[]> {\n    const menus: Menu[] = await this.menus.findAll({\n      attributes: { exclude: ['password'] },\n      order: [['id', 'DESC']],\n    });\n    return menus;\n  }\n}\n\nexport default UserService;\n"],"names":["UserService","findMenusByRoleId","menus","findAll","attributes","exclude","order","DB","Menus","roles","Roles"],"mappings":"AAAA;;;;;AACe,IAAA,UAAY,kCAAZ,cAAY,EAAA;;;;;;AAO3B,IAAA,AAAMA,WAAW,GAAjB,MAAMA,WAAW;IAIf,MAAaC,iBAAiB,GAAoB;QAChD,MAAMC,KAAK,GAAW,MAAM,IAAI,CAACA,KAAK,CAACC,OAAO,CAAC;YAC7CC,UAAU,EAAE;gBAAEC,OAAO,EAAE;oBAAC,UAAU;iBAAC;aAAE;YACrCC,KAAK,EAAE;gBAAC;oBAAC,IAAI;oBAAE,MAAM;iBAAC;aAAC;SACxB,CAAC,AAAC;QACH,OAAOJ,KAAK,CAAC;KACd;;QATD,KAAOA,KAAK,GAAGK,UAAE,QAAA,CAACC,KAAK,AAAC,AAT1B,CAS0B;QACxB,KAAOC,KAAK,GAAGF,UAAE,QAAA,CAACG,KAAK,AAAC,AAV1B,CAU0B;;CASzB;eAEcV,WAAW"}