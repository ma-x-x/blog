{"version":3,"sources":["../../src/controllers/users.controller.ts"],"sourcesContent":["import { NextFunction, Request, Response } from 'express';\nimport { CreateUserDto } from '@dtos/users.dto';\nimport { User } from '@interfaces/users.interface';\nimport userService from '@services/users.service';\nimport { RequestWithUser } from '@/interfaces/auth.interface';\nimport { formatResultData } from './../utils/formatResult';\nimport roleService from '@services/roles.service';\n\nclass UsersController {\n  public userService = new userService();\n  public roleService = new roleService();\n\n  public getUsers = async (req: Request, res: Response, next: NextFunction) => {\n    try {\n      const findAllUsersData: User[] = await this.userService.findAllUser();\n      res.status(200).json(formatResultData(findAllUsersData));\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  public getCurrentUser = async (req: RequestWithUser, res: Response, next: NextFunction) => {\n    try {\n      const userId = req.user.id;\n      const findOneUserData: User = await this.userService.findCurrentUser(userId);\n      res.status(200).json(formatResultData(findOneUserData));\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  public getUserById = async (req: Request, res: Response, next: NextFunction) => {\n    try {\n      const username = req.params.username;\n      const findOneUserData: User = await this.userService.findUserById(username);\n\n      res.status(200).json(formatResultData(findOneUserData));\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  public createUser = async (req: Request, res: Response, next: NextFunction) => {\n    try {\n      const userData: CreateUserDto = req.body;\n      const createUserData: User = await this.userService.createUser(userData);\n      res.status(201).json(formatResultData(createUserData));\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  public updateUser = async (req: Request, res: Response, next: NextFunction) => {\n    try {\n      const username = Number(req.params.id);\n      const userData: CreateUserDto = req.body;\n      const updateUserData: User = await this.userService.updateUser(username, userData);\n      res.status(200).json(formatResultData(updateUserData));\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  public deleteUser = async (req: Request, res: Response, next: NextFunction) => {\n    try {\n      const username = Number(req.params.id);\n      const deleteUserData: User = await this.userService.deleteUser(username);\n      res.status(200).json(formatResultData(deleteUserData));\n    } catch (error) {\n      next(error);\n    }\n  };\n}\n\nexport default UsersController;\n"],"names":["UsersController","userService","roleService","getUsers","req","res","next","findAllUsersData","findAllUser","status","json","formatResultData","error","getCurrentUser","userId","user","id","findOneUserData","findCurrentUser","getUserById","username","params","findUserById","createUser","userData","body","createUserData","updateUser","Number","updateUserData","deleteUser","deleteUserData"],"mappings":"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"}