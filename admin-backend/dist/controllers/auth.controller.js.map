{"version":3,"sources":["../../src/controllers/auth.controller.ts"],"sourcesContent":["import { NextFunction, Request, Response } from 'express';\nimport { CreateUserDto, LoginUserDto } from '@dtos/users.dto';\nimport { User } from '@interfaces/users.interface';\nimport { RequestWithUser } from '@interfaces/auth.interface';\nimport AuthService from '@services/auth.service';\nimport { logger } from '@/utils/logger';\nimport { formatResultData } from '@/utils/formatResult';\n\nclass AuthController {\n  public authService = new AuthService();\n\n  public signUp = async (req: Request, res: Response, next: NextFunction) => {\n    try {\n      const userData: CreateUserDto = req.body;\n      const signUpUserData: User = await this.authService.signup(userData);\n\n      res.status(201).json(formatResultData(signUpUserData));\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  public logIn = async (req: Request, res: Response, next: NextFunction) => {\n    try {\n      const userData: LoginUserDto = req.body;\n      const { cookie, token, findUser } = await this.authService.login(userData);\n      res.setHeader('Set-Cookie', [cookie]);\n      res.status(200).json(\n        formatResultData({\n          username: findUser.username,\n          email: findUser.email,\n          id: findUser.id,\n          access_token: token,\n        }),\n      );\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  public logOut = async (req: RequestWithUser, res: Response, next: NextFunction) => {\n    try {\n      const userData: User = req.user;\n      const logOutUserData: User = await this.authService.logout(userData);\n\n      res.setHeader('Set-Cookie', ['Authorization=; Max-age=0']);\n      res.status(200).json(formatResultData(logOutUserData));\n    } catch (error) {\n      next(error);\n    }\n  };\n}\n\nexport default AuthController;\n"],"names":["AuthController","authService","AuthService","signUp","req","res","next","userData","body","signUpUserData","signup","status","json","formatResultData","error","logIn","cookie","token","findUser","login","setHeader","username","email","id","access_token","logOut","user","logOutUserData","logout"],"mappings":"AAAA;;;;;AAIwB,IAAA,YAAwB,kCAAxB,0BAAwB,EAAA;AAEf,IAAA,aAAsB,WAAtB,uBAAsB,CAAA;;;;;;AAEvD,IAAA,AAAMA,cAAc,GAApB,MAAMA,cAAc;;QAClB,KAAOC,WAAW,GAAG,IAAIC,YAAW,QAAA,EAAE,AAAC,AATzC,CASyC;QAEvC,KAAOC,MAAM,GAAG,OAAOC,GAAY,EAAEC,GAAa,EAAEC,IAAkB,GAAK;YACzE,IAAI;gBACF,MAAMC,QAAQ,GAAkBH,GAAG,CAACI,IAAI,AAAC;gBACzC,MAAMC,cAAc,GAAS,MAAM,IAAI,CAACR,WAAW,CAACS,MAAM,CAACH,QAAQ,CAAC,AAAC;gBAErEF,GAAG,CAACM,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAACC,CAAAA,GAAAA,aAAgB,AAAgB,CAAA,iBAAhB,CAACJ,cAAc,CAAC,CAAC,CAAC;aACxD,CAAC,OAAOK,KAAK,EAAE;gBACdR,IAAI,CAACQ,KAAK,CAAC,CAAC;aACb;SACF,AAAC,AApBJ,CAoBI;QAEF,KAAOC,KAAK,GAAG,OAAOX,GAAY,EAAEC,GAAa,EAAEC,IAAkB,GAAK;YACxE,IAAI;gBACF,MAAMC,QAAQ,GAAiBH,GAAG,CAACI,IAAI,AAAC;gBACxC,MAAM,EAAEQ,MAAM,CAAA,EAAEC,KAAK,CAAA,EAAEC,QAAQ,CAAA,EAAE,GAAG,MAAM,IAAI,CAACjB,WAAW,CAACkB,KAAK,CAACZ,QAAQ,CAAC,AAAC;gBAC3EF,GAAG,CAACe,SAAS,CAAC,YAAY,EAAE;oBAACJ,MAAM;iBAAC,CAAC,CAAC;gBACtCX,GAAG,CAACM,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAClBC,CAAAA,GAAAA,aAAgB,AAKd,CAAA,iBALc,CAAC;oBACfQ,QAAQ,EAAEH,QAAQ,CAACG,QAAQ;oBAC3BC,KAAK,EAAEJ,QAAQ,CAACI,KAAK;oBACrBC,EAAE,EAAEL,QAAQ,CAACK,EAAE;oBACfC,YAAY,EAAEP,KAAK;iBACpB,CAAC,CACH,CAAC;aACH,CAAC,OAAOH,KAAK,EAAE;gBACdR,IAAI,CAACQ,KAAK,CAAC,CAAC;aACb;SACF,AAAC,AAtCJ,CAsCI;QAEF,KAAOW,MAAM,GAAG,OAAOrB,GAAoB,EAAEC,GAAa,EAAEC,IAAkB,GAAK;YACjF,IAAI;gBACF,MAAMC,QAAQ,GAASH,GAAG,CAACsB,IAAI,AAAC;gBAChC,MAAMC,cAAc,GAAS,MAAM,IAAI,CAAC1B,WAAW,CAAC2B,MAAM,CAACrB,QAAQ,CAAC,AAAC;gBAErEF,GAAG,CAACe,SAAS,CAAC,YAAY,EAAE;oBAAC,2BAA2B;iBAAC,CAAC,CAAC;gBAC3Df,GAAG,CAACM,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAACC,CAAAA,GAAAA,aAAgB,AAAgB,CAAA,iBAAhB,CAACc,cAAc,CAAC,CAAC,CAAC;aACxD,CAAC,OAAOb,KAAK,EAAE;gBACdR,IAAI,CAACQ,KAAK,CAAC,CAAC;aACb;SACF,AAAC,AAlDJ,CAkDI;;CACH;eAEcd,cAAc"}